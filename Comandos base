docker build -f docker/Dockerfile -t my/ros:app .

docker builder build --target build --platform linux/arm64 --build-arg TARGETPLATFORM=linux/arm64 --build-arg TARGETARCH=arm64 -f docker/Dockerfile -t my/ros:base .
docker builder build --target build --platform linux --build-arg TARGETPLATFORM=linux --build-arg TARGETARCH=x64 -f docker/Dockerfile -t my/ros:app .

docker builder build --target base --platform linux/arm64 --build-arg TARGETPLATFORM=linux/arm64 --build-arg TARGETARCH=arm64 -f docker/Dockerfile -t my/ros:base .
docker builder build --target base --platform linux --build-arg TARGETPLATFORM=linux --build-arg TARGETARCH=x64 -f docker/Dockerfile -t my/ros:app .

docker rmi my/ros:app 


docker run -it --name my_ros --net=host --device=/dev/ttyUSB0 --rm my/ros:app


ros2 run mavros mavros_node --ros-args --param fcu_url:=udp://:14550@


docker-compose up

docker container exec -it my_ros bash


ros2 run asv_control pwm_key 


ros2 launch asv_bringup control_test.launch.py 


docker run -it -v ~/images/Docker_asv/bag_files:/bag_files:rw --name my_ros --net=host --rm my/ros:app2 bash


Comando para Dispositivos ttyUSB

cd /docker
sudo chmod 777 bind_device.sh
sudo sh bind_device.sh
ll /dev/xbee_usb
ll /dev/imu_usb